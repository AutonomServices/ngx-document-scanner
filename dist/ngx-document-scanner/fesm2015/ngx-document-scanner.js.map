{"version":3,"file":"ngx-document-scanner.js.map","sources":["ng://ngx-document-scanner/lib/services/ngx-open-cv.service.ts","ng://ngx-document-scanner/lib/services/limits.service.ts","ng://ngx-document-scanner/lib/components/draggable-point/ngx-draggable-point.component.ts","ng://ngx-document-scanner/lib/components/filter-menu/ngx-filter-menu.component.ts","ng://ngx-document-scanner/lib/components/shape-outline/ngx-shape-outline.component.ts","ng://ngx-document-scanner/lib/components/image-editor/ngx-doc-scanner.component.ts","ng://ngx-document-scanner/lib/ngx-document-scanner.module.ts"],"sourcesContent":["import {Inject, Injectable, InjectionToken, NgZone} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {OpenCvConfig, OpenCvState} from '../PublicModels';\n\nexport const OpenCvConfigToken = new InjectionToken<OpenCvConfig>('OpenCV config object token');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxOpenCvService {\n\n  cvState = new BehaviorSubject<OpenCvState>({\n    ready: false,\n    error: false,\n    loading: true,\n    state: 'loading'\n  });\n  configModule: OpenCvConfigModule;\n\n  constructor(@Inject(OpenCvConfigToken) options: OpenCvConfig, private _ngZone: NgZone) {\n    if (!options) {\n      options = {};\n    }\n    this.configModule = this.generateConfigModule(options);\n    this.loadOpenCv();\n  }\n\n  /**\n   * load the OpenCV script\n   */\n  loadOpenCv() {\n    this.cvState.next( this.newState('loading'));\n    // create global module variable\n    window['Module'] = this.configModule;\n\n    // create script element and set attributes\n    const script = <HTMLScriptElement> document.createElement('script');\n    script.setAttribute('async', '');\n    script.setAttribute('type', 'text/javascript');\n\n    // listen for errors\n    script.addEventListener('error', () => {\n      const err = new Error('Failed to load ' + this.configModule.scriptUrl);\n      this.cvState.next(this.newState('error'));\n      this.cvState.error(err);\n    }, {passive: true});\n\n    // set script url\n    script.src = this.configModule.scriptUrl;\n    // insert script as first script tag\n    const node = document.getElementsByTagName('script')[0];\n    if (node) {\n      node.parentNode.insertBefore(script, node);\n    } else {\n      document.head.appendChild(script);\n    }\n  }\n\n  /**\n   * generates a new state object\n   * @param change - the new state of the module\n   */\n  private newState(change: 'loading'|'ready'|'error'): OpenCvState {\n    const newStateObj: OpenCvState = {\n      ready: false,\n      loading: false,\n      error: false,\n      state: ''\n    };\n    Object.keys(newStateObj).forEach(key => {\n      if (key !== 'state') {\n        if (key === change) {\n          newStateObj[key] = true;\n          newStateObj.state = key;\n        } else {\n          newStateObj[key] = false;\n        }\n      }\n    });\n    return newStateObj;\n  }\n\n  /**\n   * generates a config module for the global Module object\n   * @param options - configuration options\n   */\n  private generateConfigModule(options: OpenCvConfig): OpenCvConfigModule {\n    return {\n      scriptUrl: options.openCvDirPath ? `${options.openCvDirPath}/opencv.js` : `/assets/opencv/opencv.js`,\n      wasmBinaryFile: 'opencv_js.wasm',\n      usingWasm: true,\n      onRuntimeInitialized: () => {\n        this._ngZone.run(() => {\n          console.log('openCV Ready');\n          this.cvState.next(this.newState('ready'));\n          if (options.runOnOpenCVInit) {\n            options.runOnOpenCVInit();\n          }\n        });\n      }\n    };\n  }\n}\n\n/**\n * describes the global Module object that is used to initiate OpenCV.js\n */\ninterface OpenCvConfigModule {\n  scriptUrl: string;\n  wasmBinaryFile: string;\n  usingWasm: boolean;\n  onRuntimeInitialized: Function;\n}\n\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {ImageDimensions} from '../PublicModels';\nimport {LimitException, XYPosition} from '../PrivateModels';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LimitsService {\n\n\n  private limitDirections: RolesArray = ['left', 'right', 'top', 'bottom'];\n  /**\n   * stores the crop limits limits\n   */\n  private _limits = {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0\n  };\n  /**\n   * stores the array of the draggable points displayed on the crop area\n   */\n  private _points: Array<PointPositionChange> = [];\n  /**\n   * stores the pane dimensions\n   */\n  private _paneDimensions: ImageDimensions;\n\n  // *********** //\n  // Observables //\n  // *********** //\n  public positions: BehaviorSubject<Array<PointPositionChange>> = new BehaviorSubject<Array<PointPositionChange>>(Array.from(this._points));\n  public repositionEvent: BehaviorSubject<Array<PointPositionChange>> = new BehaviorSubject<Array<PointPositionChange>>([]);\n  public limits: BehaviorSubject<AreaLimits> = new BehaviorSubject<AreaLimits>(this._limits);\n  public paneDimensions: BehaviorSubject<ImageDimensions> = new BehaviorSubject({width: 0, height: 0});\n\n  constructor() {\n  }\n\n  /**\n   * set privew pane dimensions\n   */\n  public setPaneDimensions(dimensions: ImageDimensions) {\n    return new Promise((resolve, reject) => {\n      this._paneDimensions = dimensions;\n      this.paneDimensions.next(dimensions);\n      resolve();\n    });\n  }\n\n  /**\n   * repositions points externally\n   */\n  public repositionPoints(positions) {\n    this._points = positions;\n    positions.forEach(position => {\n      this.positionChange(position);\n    });\n    this.repositionEvent.next(positions);\n  }\n\n  /**\n   * updates limits and point positions and calls next on the observables\n   * @param positionChangeData - position change event data\n   */\n  public positionChange(positionChangeData: PointPositionChange) {\n    // update positions according to current position change\n    this.updatePosition(positionChangeData);\n\n    // for each direction:\n    // 1. filter the _points that have a role as the direction's limit\n    // 2. for top and left find max x | y values, and min for right and bottom\n    this.limitDirections.forEach(direction => {\n      const relevantPoints = this._points.filter(point => {\n        return point.roles.includes(direction);\n      })\n        .map((point: PointPositionChange) => {\n          return point[this.getDirectionAxis(direction)];\n        });\n      let limit;\n      if (direction === 'top' || direction === 'left') {\n        limit = Math.max(...relevantPoints);\n      }\n      if (direction === 'right' || direction === 'bottom') {\n        limit = Math.min(...relevantPoints);\n      }\n      this._limits[direction] = limit;\n    });\n\n    this.limits.next(this._limits);\n    this.positions.next(Array.from(this._points));\n  }\n\n  /**\n   * updates the position of the point\n   * @param positionChange - position change event data\n   */\n  public updatePosition(positionChange: PointPositionChange) {\n    // finds the current position of the point by it's roles, than splices it for the new position or pushes it if it's not yet in the array\n    const index = this._points.findIndex(point => {\n      return this.compareArray(positionChange.roles, point.roles);\n    });\n    if (index === -1) {\n      this._points.push(positionChange);\n    } else {\n      this._points.splice(index, 1, positionChange);\n    }\n  }\n\n  /**\n   * check if a position change event exceeds the limits\n   * @param positionChange - position change event data\n   * @returns LimitException0\n   */\n  public exceedsLimit(positionChange: PointPositionChange): LimitException {\n    const pointLimits = this.limitDirections.filter(direction => {\n      return !positionChange.roles.includes(direction);\n    });\n\n    const limitException: LimitException = {\n      exceeds: false,\n      resetCoefficients: {\n        x: 0,\n        y: 0\n      },\n      resetCoordinates: {\n        x: positionChange.x,\n        y: positionChange.y\n      }\n    };\n\n    // limit directions are the opposite sides of the point's roles\n    pointLimits.forEach(direction => {\n      const directionAxis = this.getDirectionAxis(direction);\n      if (direction === 'top' || direction === 'left') {\n        if (positionChange[directionAxis] < this._limits[direction]) {\n          limitException.resetCoefficients[directionAxis] = 1;\n          limitException.resetCoordinates[directionAxis] = this._limits[direction];\n        }\n      } else if (direction === 'right' || direction === 'bottom') {\n        if (positionChange[directionAxis] > this._limits[direction]) {\n          limitException.resetCoefficients[directionAxis] = -1;\n          limitException.resetCoordinates[directionAxis] = this._limits[direction];\n        }\n      }\n    });\n\n    if (limitException.resetCoefficients.x !== 0 || limitException.resetCoefficients.y !== 0) {\n      limitException.exceeds = true;\n    }\n\n    return limitException;\n  }\n\n  /**\n   * rotate crop tool points clockwise\n   * @param resizeRatios - ratio between the new dimensions and the previous\n   * @param initialPreviewDimensions - preview pane dimensions before rotation\n   * @param initialPositions - current positions before rotation\n   */\n  public rotateClockwise(resizeRatios, initialPreviewDimensions, initialPositions: Array<PointPositionChange>) {\n    // convert positions to ratio between position to initial pane dimension\n    initialPositions = initialPositions.map(point => {\n      return new PositionChangeData({\n        x: point.x / initialPreviewDimensions.width,\n        y: point.y / initialPreviewDimensions.height,\n      }, point.roles);\n    });\n    this.repositionPoints(initialPositions.map(point => {\n      return this.rotateCornerClockwise(point);\n    }));\n  }\n\n  /**\n   * returns the corner positions after a 90 degrees clockwise rotation\n   */\n  private rotateCornerClockwise(corner: PointPositionChange): PointPositionChange {\n    const rotated: PointPositionChange = {\n      x: this._paneDimensions.width * (1 - corner.y),\n      y: this._paneDimensions.height * corner.x,\n      roles: []\n    };\n    // rotates corner according to order\n    const order: Array<RolesArray> = [\n      ['bottom', 'left'],\n      ['top', 'left'],\n      ['top', 'right'],\n      ['bottom', 'right'],\n      ['bottom', 'left']\n    ];\n    rotated.roles = order[order.findIndex(roles => {\n      return this.compareArray(roles, corner.roles);\n    }) + 1];\n    return rotated;\n  }\n\n  /**\n   * checks if two array contain the same values\n   * @param array1 - array 1\n   * @param array2 - array 2\n   * @returns boolean\n   */\n  public compareArray(array1: Array<string>, array2: Array<string>): boolean {\n    return array1.every((element) => {\n      return array2.includes(element);\n    }) && array1.length === array2.length;\n  }\n\n  private getDirectionAxis(direction) {\n    return {\n      left: 'x',\n      right: 'x',\n      top: 'y',\n      bottom: 'y'\n    }[direction];\n  }\n}\n\n\nexport interface PointPositionChange {\n  x: number;\n  y: number;\n  roles: RolesArray;\n}\n\nexport interface AreaLimits {\n  top: number;\n  bottom: number;\n  right: number;\n  left: number;\n}\n\nexport type RolesArray = Array<Direction>;\n\nexport class PositionChangeData implements PointPositionChange {\n  x: number;\n  y: number;\n  roles: RolesArray;\n\n  constructor(position: XYPosition, roles: RolesArray) {\n    this.x = position.x;\n    this.y = position.y;\n    this.roles = roles;\n  }\n}\n\nexport type Direction = 'left' | 'right' | 'top' | 'bottom';\n","import {AfterViewInit, Component, Input} from '@angular/core';\nimport {LimitsService, PointPositionChange, PositionChangeData} from '../../services/limits.service';\nimport {ImageDimensions} from '../../PublicModels';\nimport {LimitException, XYPosition} from '../../PrivateModels';\n\n@Component({\n  selector: 'ngx-draggable-point',\n  templateUrl: './ngx-draggable-point.component.html',\n})\nexport class NgxDraggablePointComponent implements AfterViewInit {\n  @Input() width = 10;\n  @Input() height = 10;\n  @Input() color = '#3cabe2';\n  @Input() shape: 'rect' | 'circle' = 'rect';\n  @Input() pointOptions: 'rect' | 'circle' = 'rect';\n  @Input() limitRoles: Array<'left'|'right'|'top'|'bottom'>;\n  @Input() startPosition: XYPosition;\n  @Input() container: HTMLElement;\n  @Input() private _currentPosition: XYPosition;\n  position: XYPosition = {\n    x: 0,\n    y: 0\n  };\n  private _paneDimensions: ImageDimensions;\n  resetPosition: XYPosition;\n\n  constructor(private limitsService: LimitsService) {}\n\n  ngAfterViewInit() {\n    Object.keys(this.pointOptions).forEach(key => {\n      this[key] = this.pointOptions[key];\n    });\n    // subscribe to pane dimensions changes\n    this.limitsService.paneDimensions.subscribe(dimensions => {\n      if (dimensions.width > 0 && dimensions.width > 0) {\n        this._paneDimensions = {\n          width: dimensions.width,\n          height: dimensions.height\n        };\n        this.position = this.getInitialPosition(dimensions);\n        this.limitsService.positionChange(new PositionChangeData(this.position, this.limitRoles));\n      }\n    });\n    // subscribe to external reposition events\n    this.limitsService.repositionEvent.subscribe(positions => {\n      if (positions.length > 0) {\n        this.externalReposition(positions);\n      }\n    });\n  }\n\n  /**\n   * returns a css style object for the point\n   */\n  pointStyle() {\n    return {\n      width: this.width + 'px',\n      height: this.height + 'px',\n      'background-color': this.color,\n      'border-radius': this.shape === 'circle' ? '100%' : 0,\n      position: 'absolute'\n    };\n  }\n\n  /**\n   * registers a position change on the limits service, and adjusts position if necessary\n   * @param position - the current position of the point\n   */\n  positionChange(position: XYPosition) {\n    const positionChangeData = new PositionChangeData(position, this.limitRoles);\n    const limitException = this.limitsService.exceedsLimit(positionChangeData);\n    if (limitException.exceeds) {\n      // if exceeds limits, reposition\n      this.resetPosition = limitException.resetCoordinates;\n    } else {\n      this.limitsService.positionChange(positionChangeData);\n      this._currentPosition = position;\n    }\n  }\n\n  /**\n   * adjusts the position of the point after a limit exception\n   */\n  private adjustPosition(limitException: LimitException) {\n    const newPosition = {\n      x: 0,\n      y: 0\n    };\n    Object.keys(this.startPosition).forEach(axis => {\n      newPosition[axis] = limitException.resetCoordinates[axis] + limitException.resetCoefficients[axis];\n    });\n    this.position = newPosition;\n    this.limitsService.positionChange(new PositionChangeData(this.position, this.limitRoles));\n  }\n\n  /**\n   * called on movement end, checks if last position exceeded the limits ad adjusts\n   */\n  movementEnd(position: XYPosition) {\n    let positionChangeData = new PositionChangeData(position, this.limitRoles);\n    const limitException = this.limitsService.exceedsLimit(positionChangeData);\n    if (limitException.exceeds) {\n      this.resetPosition = limitException.resetCoordinates;\n      if (limitException.exceeds) {\n        this.adjustPosition(limitException);\n        positionChangeData = new PositionChangeData(this.position, this.limitRoles);\n        this.limitsService.updatePosition(positionChangeData);\n      }\n    }\n  }\n\n  /**\n   * calculates the initial positions of the point by it's roles\n   * @param dimensions - dimensions of the pane in which the point is located\n   */\n  private getInitialPosition(dimensions: ImageDimensions) {\n    return {\n      x: this.limitRoles.includes('left') ? 0 : dimensions.width - this.width / 2,\n      y: this.limitRoles.includes('top') ? 0 : dimensions.height - this.height / 2\n    };\n  }\n\n  /**\n   * repositions the point after an external reposition event\n   * @param positions - an array of all points on the pane\n   */\n  private externalReposition(positions: Array<PointPositionChange>) {\n    positions.forEach(position => {\n      if (this.limitsService.compareArray(this.limitRoles, position.roles)) {\n        position = this.enforcePaneLimits(position);\n        this.position = {\n          x: position.x,\n          y: position.y\n        };\n      }\n    });\n  }\n\n  /**\n   * returns a new point position if the movement exceeded the pane limit\n   */\n  private enforcePaneLimits(position: PointPositionChange): PointPositionChange {\n    if (this._paneDimensions.width === 0 || this._paneDimensions.height === 0) {\n      return position;\n    } else {\n      if (position.x > this._paneDimensions.width) { position.x = this._paneDimensions.width; }\n      if (position.x < 0) { position.x = 1; }\n      if (position.y > this._paneDimensions.height) { position.y = this._paneDimensions.height; }\n      if (position.y < 0) { position.y = 1; }\n    }\n    return position;\n  }\n}\n\n","import {Component, EventEmitter, Inject, Output} from '@angular/core';\nimport {EditorActionButton} from '../../PrivateModels';\nimport {MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef} from '@angular/material';\n\n@Component({\n  selector: 'ngx-filter-menu',\n  templateUrl: './ngx-filter-menu.component.html',\n})\nexport class NgxFilterMenuComponent {\n  filterOptions: Array<EditorActionButton> = [\n    {\n      name: 'default',\n      icon: 'filter_b_and_w',\n      action: (filter) => {\n        this.filterSelected.emit(filter);\n      },\n      text: 'B&W'\n    },\n    {\n      name: 'bw2',\n      icon: 'filter_b_and_w',\n      action: (filter) => {\n        this.filterSelected.emit(filter);\n      },\n      text: 'B&W 2'\n    },\n    {\n      name: 'bw3',\n      icon: 'blur_on',\n      action: (filter) => {\n        this.filterSelected.emit(filter);\n      },\n      text: 'B&W 3'\n    },\n    {\n      name: 'magic_color',\n      icon: 'filter_vintage',\n      action: (filter) => {\n        this.filterSelected.emit(filter);\n      },\n      text: 'Magic Color'\n    },\n    {\n      name: 'original',\n      icon: 'crop_original',\n      action: (filter) => {\n        this.filterSelected.emit(filter);\n      },\n      text: 'Original'\n    },\n  ];\n  @Output() filterSelected: EventEmitter<string> = new EventEmitter();\n  selectOption(optionName) {\n    this.data.filter = optionName;\n    this.bottomSheetRef.dismiss();\n  }\n\n  constructor(private bottomSheetRef: MatBottomSheetRef<NgxFilterMenuComponent>,\n              @Inject(MAT_BOTTOM_SHEET_DATA) public data: any\n              ) {}\n\n}\n","import {AfterViewInit, Component, Input, ViewChild} from '@angular/core';\nimport {LimitsService, PointPositionChange} from '../../services/limits.service';\nimport {ImageDimensions} from '../../PublicModels';\n\n@Component({\n  selector: 'ngx-shape-outine',\n  templateUrl: './ngx-shape-outline.component.html',\n})\nexport class NgxShapeOutlineComponent implements AfterViewInit {\n\n  @Input() color = '#3cabe2';\n  @Input() weight: number;\n  @Input() dimensions: ImageDimensions;\n  @ViewChild('outline') canvas;\n\n  private _points: Array<PointPositionChange>;\n  private _sortedPoints: Array<PointPositionChange>;\n  constructor(private limitsService: LimitsService) {}\n\n  ngAfterViewInit() {\n    // init drawing canvas dimensions\n    this.canvas.nativeElement.width = this.dimensions.width;\n    this.canvas.nativeElement.height = this.dimensions.height;\n    this.limitsService.positions.subscribe(positions => {\n      if (positions.length === 4) {\n        this._points = positions;\n        this.sortPoints();\n        this.clearCanvas();\n        this.drawShape();\n      }\n    });\n    // subscribe to changes in the pane's dimensions\n    this.limitsService.paneDimensions.subscribe(dimensions => {\n      this.clearCanvas();\n      this.canvas.nativeElement.width = dimensions.width;\n      this.canvas.nativeElement.height = dimensions.height;\n    });\n    // subscribe to reposition events\n    this.limitsService.repositionEvent.subscribe( positions => {\n      if (positions.length === 4) {\n        setTimeout( () => {\n          this.clearCanvas();\n          this.sortPoints();\n          this.drawShape();\n        }, 10);\n      }\n    });\n  }\n\n  /**\n   * clears the shape canvas\n   */\n  private clearCanvas() {\n    const canvas = this.canvas.nativeElement;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, this.dimensions.width, this.dimensions.height);\n  }\n\n  /**\n   * sorts the array of points according to their clockwise alignment\n   */\n  private sortPoints() {\n    const _points = Array.from(this._points);\n    const sortedPoints = [];\n\n    const sortOrder = {\n      vertical: ['top', 'top', 'bottom', 'bottom'],\n      horizontal: ['left', 'right', 'right', 'left']\n    };\n\n    for (let i = 0; i < 4; i++) {\n      const roles = Array.from([sortOrder.vertical[i], sortOrder.horizontal[i]]);\n      sortedPoints.push(_points.filter((point) => {\n        return this.limitsService.compareArray(point.roles, roles);\n      })[0]);\n\n    }\n    this._sortedPoints = sortedPoints;\n  }\n\n  /**\n   * draws a line between the points according to their order\n   */\n  private drawShape() {\n    const canvas = this.canvas.nativeElement;\n    const ctx = canvas.getContext('2d');\n    ctx.lineWidth = this.weight;\n    ctx.strokeStyle = this.color;\n    ctx.beginPath();\n    this._sortedPoints.forEach((point, index) => {\n      if (index === 0) {\n        ctx.moveTo(point.x, point.y);\n      }\n      if (index !== this._sortedPoints.length - 1) {\n        const nextPoint = this._sortedPoints[index + 1];\n        ctx.lineTo(nextPoint.x, nextPoint.y);\n      } else {\n        ctx.closePath();\n      }\n    });\n    ctx.stroke();\n  }\n}\n\n\n","import {Component, ElementRef, EventEmitter, InjectionToken, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {LimitsService, PointPositionChange, PositionChangeData, RolesArray} from '../../services/limits.service';\nimport {MatBottomSheet} from '@angular/material';\nimport {NgxFilterMenuComponent} from '../filter-menu/ngx-filter-menu.component';\nimport {PointShape} from '../../PrivateModels';\nimport {NgxOpenCvService} from '../../services/ngx-open-cv.service';\nimport {ImageDimensions, DocScannerConfig, OpenCvConfig, OpenCvState} from '../../PublicModels';\nimport {EditorActionButton, PointOptions} from '../../PrivateModels';\n\ndeclare var cv: any;\n\n@Component({\n  selector: 'ngx-doc-scanner',\n  templateUrl: './ngx-doc-scanner.component.html',\n  styleUrls: ['./ngx-doc-scanner.component.scss']\n})\nexport class NgxDocScannerComponent implements OnInit {\n  /**\n   * editor config object\n   */\n  options: ImageEditorConfig;\n  // ************* //\n  // EDITOR CONFIG //\n  // ************* //\n  /**\n   * an array of action buttons displayed on the editor screen\n   */\n  private editorButtons: Array<EditorActionButton> = [\n    {\n      name: 'exit',\n      action: () => {\n        this.exitEditor.emit('canceled');\n      },\n      icon: 'arrow_back',\n      type: 'fab',\n      mode: 'crop'\n    },\n    {\n      name: 'rotate',\n      action: this.rotateImage.bind(this),\n      icon: 'rotate_right',\n      type: 'fab',\n      mode: 'crop'\n    },\n    {\n      name: 'done_crop',\n      action: async () => {\n        this.mode = 'color';\n        await this.transform();\n        await this.applyFilter(true);\n      },\n      icon: 'done',\n      type: 'fab',\n      mode: 'crop'\n    },\n    {\n      name: 'back',\n      action: () => {\n        this.mode = 'crop';\n        this.loadFile(this.originalImage);\n      },\n      icon: 'arrow_back',\n      type: 'fab',\n      mode: 'color'\n    },\n    {\n      name: 'filter',\n      action: () => {\n        return this.chooseFilters();\n      },\n      icon: 'photo_filter',\n      type: 'fab',\n      mode: 'color'\n    },\n    {\n      name: 'upload',\n      action: this.exportImage.bind(this),\n      icon: 'cloud_upload',\n      type: 'fab',\n      mode: 'color'\n    },\n  ];\n  /**\n   * returns an array of buttons according to the editor mode\n   */\n  get displayedButtons() {\n    return this.editorButtons.filter(button => {\n      return button.mode === this.mode;\n    });\n  }\n  /**\n   * max width of the preview area\n   */\n  private maxPreviewWidth: number;\n  /**\n   * dimensions of the image container\n   */\n  imageDivStyle: {[key: string]: string|number};\n  /**\n   * editor div style\n   */\n  editorStyle: {[key: string]: string|number};\n\n  // ************* //\n  // EDITOR STATE //\n  // ************* //\n  /**\n   * state of opencv loading\n   */\n  private cvState: string;\n  /**\n   * true after the image is loaded and preview is displayed\n   */\n  imageLoaded = false;\n  /**\n   * editor mode\n   */\n  mode: 'crop'|'color' = 'crop';\n  /**\n   * filter selected by the user, returned by the filter selector bottom sheet\n   */\n  private selectedFilter = 'default';\n\n  // ******************* //\n  // OPERATION VARIABLES //\n  // ******************* //\n  /**\n   * viewport dimensions\n   */\n  private screenDimensions: ImageDimensions;\n  /**\n   * image dimensions\n   */\n  private imageDimensions: ImageDimensions = {\n    width: 0,\n    height: 0\n  };\n  /**\n   * dimensions of the preview pane\n   */\n  previewDimensions: ImageDimensions;\n  /**\n   * ration between preview image and original\n   */\n  private imageResizeRatio: number;\n  /**\n   * stores the original image for reset purposes\n   */\n  private originalImage: File;\n  /**\n   * stores the edited image\n   */\n  private editedImage: HTMLCanvasElement;\n  /**\n   * stores the preview image as canvas\n   */\n  @ViewChild('PreviewCanvas', {read: ElementRef}) private previewCanvas: ElementRef;\n  /**\n   * an array of points used by the crop tool\n   */\n  private points: Array<PointPositionChange>;\n\n  // ************** //\n  // EVENT EMITTERS //\n  // ************** //\n  /**\n   * optional binding to the exit button of the editor\n   */\n  @Output() exitEditor: EventEmitter<string> = new EventEmitter<string>();\n  /**\n   * fires on edit completion\n   */\n  @Output() editResult: EventEmitter<Blob> = new EventEmitter<Blob>();\n  /**\n   * emits errors, can be linked to an error handler of choice\n   */\n  @Output() error: EventEmitter<any> = new EventEmitter<any>();\n  /**\n   * emits the loading status of the cv module.\n   */\n  @Output() ready: EventEmitter<boolean> = new EventEmitter<boolean>();\n  /**\n   * emits true when processing is done, false when completed\n   */\n  @Output() processing: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  // ****** //\n  // INPUTS //\n  // ****** //\n  /**\n   * set image for editing\n   * @param file - file from form input\n   */\n  @Input() set file(file: File) {\n    if (file) {\n      setTimeout(() => {\n        this.processing.emit(true);\n      }, 5);\n      this.imageLoaded = false;\n      this.originalImage = file;\n      this.ngxOpenCv.cvState.subscribe(\n        async (cvState: OpenCvState) => {\n          if (cvState.ready) {\n            // read file to image & canvas\n            await this.loadFile(file);\n            this.processing.emit(false);\n          }\n        });\n    }\n  }\n\n  /**\n   * editor configuration object\n   */\n  @Input() config: DocScannerConfig;\n\n\n  constructor(private ngxOpenCv: NgxOpenCvService, private limitsService: LimitsService, private bottomSheet: MatBottomSheet) {\n    this.screenDimensions = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n\n    // subscribe to status of cv module\n    this.ngxOpenCv.cvState.subscribe((cvState: OpenCvState) => {\n      this.cvState = cvState.state;\n      this.ready.emit(cvState.ready);\n      if (cvState.error) {\n        this.error.emit(new Error('error loading cv'));\n      } else if (cvState.loading) {\n        this.processing.emit(true);\n      } else if (cvState.ready) {\n        this.processing.emit(false);\n      }\n    });\n\n    // subscribe to positions of crop tool\n    this.limitsService.positions.subscribe(points => {\n      this.points = points;\n    });\n  }\n\n  ngOnInit() {\n    // set options from config object\n    this.options = new ImageEditorConfig(this.config);\n    // set export image icon\n    this.editorButtons.forEach(button => {\n      if (button.name === 'upload') {\n        button.icon = this.options.exportImageIcon;\n      }\n    });\n    this.maxPreviewWidth = this.options.maxPreviewWidth;\n    this.editorStyle = this.options.editorStyle;\n  }\n\n  // ***************************** //\n  // editor action buttons methods //\n  // ***************************** //\n\n  /**\n   * emits the exitEditor event\n   */\n  exit() {\n    this.exitEditor.emit('canceled');\n  }\n\n  /**\n   * applies the selected filter, and when done emits the resulted image\n   */\n  private async exportImage() {\n    await this.applyFilter(false);\n    if (this.options.maxImageDimensions) {\n      this.resize()\n        .then(resizeResult => {\n          resizeResult.toBlob((blob) => {\n            this.editResult.emit(blob);\n            this.processing.emit(false);\n          }, this.originalImage.type);\n        });\n    } else {\n      this.editedImage.toBlob((blob) => {\n        this.editResult.emit(blob);\n        this.processing.emit(false);\n      }, this.originalImage.type);\n    }\n  }\n\n  /**\n   * open the bottom sheet for selecting filters, and applies the selected filter in preview mode\n   */\n  private chooseFilters() {\n    const data = { filter: this.selectedFilter };\n    const bottomSheetRef = this.bottomSheet.open(NgxFilterMenuComponent, {\n      data: data\n    });\n    bottomSheetRef.afterDismissed().subscribe(() => {\n      this.selectedFilter = data.filter;\n      this.applyFilter(true);\n    });\n\n  }\n\n  // *************************** //\n  // File Input & Output Methods //\n  // *************************** //\n  /**\n   * load image from input field\n   */\n  private loadFile(file: File) {\n    return new Promise(async (resolve, reject) => {\n      this.processing.emit(true);\n      try {\n        await this.readImage(file);\n      } catch (err) {\n        console.error(err);\n        this.error.emit(new Error(err));\n      }\n      try {\n        await this.showPreview();\n      } catch (err) {\n        console.error(err);\n        this.error.emit(new Error(err));\n      }\n      // set pane limits\n      // show points\n      this.imageLoaded = true;\n      await this.limitsService.setPaneDimensions({width: this.previewDimensions.width, height: this.previewDimensions.height});\n      setTimeout(async () => {\n        await this.detectContours();\n        this.processing.emit(false);\n        resolve();\n      }, 15);\n    });\n  }\n\n  /**\n   * read image from File object\n   */\n  private readImage(file: File) {\n    return new Promise(async (resolve, reject) => {\n      let imageSrc;\n      try {\n        imageSrc = await readFile();\n      } catch (err) {\n        reject(err);\n      }\n      const img = new Image();\n      img.onload = () => {\n        // set edited image canvas and dimensions\n        this.editedImage = <HTMLCanvasElement> document.createElement('canvas');\n        this.editedImage.width = img.width;\n        this.editedImage.height = img.height;\n        this.imageDimensions.width = img.width;\n        this.imageDimensions.height = img.height;\n        const ctx = this.editedImage.getContext('2d');\n        ctx.drawImage(img, 0, 0);\n        this.setPreviewPaneDimensions(this.editedImage);\n        resolve();\n      };\n      img.src = imageSrc;\n    });\n\n    /**\n     * read file from input field\n     */\n    function readFile() {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n          resolve(reader.result);\n        };\n        reader.onerror = (err) => {\n          reject(err);\n        };\n        reader.readAsDataURL(file);\n      });\n    }\n  }\n\n  // ************************ //\n  // Image Processing Methods //\n  // ************************ //\n  /**\n   * rotate image 90 degrees\n   */\n  private rotateImage() {\n    return new Promise((resolve, reject) => {\n      this.processing.emit(true);\n      const src = cv.imread(this.editedImage);\n      const dst = new cv.Mat();\n      cv.transpose(src, dst);\n      cv.flip(dst, dst, 1);\n      cv.imshow(this.editedImage, dst);\n      src.delete(); dst.delete();\n      // save current preview dimensions and positions\n      const initialPreviewDimensions = {width: 0, height: 0};\n      Object.assign(initialPreviewDimensions, this.previewDimensions);\n      const initialPositions = Array.from(this.points);\n      // get new dimensions\n      // set new preview pane dimensions\n      this.setPreviewPaneDimensions(this.editedImage);\n      // get preview pane resize ratio\n      const previewResizeRatios = {\n        width: this.previewDimensions.width / initialPreviewDimensions.width,\n        height: this.previewDimensions.height / initialPreviewDimensions.height\n      };\n      // set new preview pane dimensions\n\n      this.limitsService.rotateClockwise(previewResizeRatios, initialPreviewDimensions, initialPositions);\n      this.showPreview().then(() => {\n        this.processing.emit(false);\n        resolve();\n      });\n    });\n\n\n  }\n\n  /**\n   * detects the contours of the document and\n   **/\n  private detectContours(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      // this.processing.emit(true);\n      // load the image and compute the ratio of the old height to the new height, clone it, and resize it\n      const processingResizeRatio = 0.5;\n      const dst = cv.imread(this.editedImage);\n      const dsize = new cv.Size(dst.rows * processingResizeRatio, dst.cols * processingResizeRatio);\n      const ksize = new cv.Size(5, 5);\n      // convert the image to grayscale, blur it, and find edges in the image\n      cv.cvtColor(dst, dst, cv.COLOR_RGBA2GRAY, 0);\n      cv.GaussianBlur(dst, dst, ksize, 0, 0, cv.BORDER_DEFAULT);\n      cv.Canny(dst, dst, 75, 200);\n      // find contours\n      cv.threshold(dst, dst, 120, 200, cv.THRESH_BINARY);\n      const contours = new cv.MatVector();\n      const hierarchy = new cv.Mat();\n      cv.findContours(dst, contours, hierarchy, cv.RETR_CCOMP, cv.CHAIN_APPROX_SIMPLE);\n      const rect = cv.boundingRect(dst);\n      dst.delete(); hierarchy.delete(); contours.delete();\n      // transform the rectangle into a set of points\n      Object.keys(rect).forEach(key => {\n        rect[key] = rect[key]  * this.imageResizeRatio;\n      });\n\n      const contourCoordinates = [\n        new PositionChangeData({x: rect.x, y: rect.y}, ['left', 'top']),\n        new PositionChangeData({x: rect.x + rect.width, y: rect.y}, ['right', 'top']),\n        new PositionChangeData({x: rect.x + rect.width, y: rect.y + rect.height}, ['right', 'bottom']),\n        new PositionChangeData({x: rect.x, y: rect.y + rect.height}, ['left', 'bottom']),\n      ];\n\n      this.limitsService.repositionPoints(contourCoordinates);\n      // this.processing.emit(false);\n      resolve();\n    });\n  }\n\n  /**\n   * apply perspective transform\n   */\n  private transform(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.processing.emit(true);\n      const src = cv.imread(this.editedImage);\n      const dst = new cv.Mat();\n\n      // create source coordinates matrix\n      const sourceCoordinates = [\n        this.getPoint(['top', 'left']),\n        this.getPoint(['top', 'right']),\n        this.getPoint(['bottom', 'right']),\n        this.getPoint(['bottom', 'left'])\n      ].map(point => {\n        return [point.x / this.imageResizeRatio, point.y / this.imageResizeRatio];\n      });\n\n      // get max width\n      const bottomWidth = this.getPoint(['bottom', 'right']).x - this.getPoint(['bottom', 'left']).x;\n      const topWidth = this.getPoint(['top', 'right']).x - this.getPoint(['top', 'left']).x;\n      const maxWidth = Math.max(bottomWidth, topWidth) / this.imageResizeRatio;\n      // get max height\n      const leftHeight = this.getPoint(['bottom', 'left']).y - this.getPoint(['top', 'left']).y;\n      const rightHeight = this.getPoint(['bottom', 'right']).y - this.getPoint(['top', 'right']).y;\n      const maxHeight = Math.max(leftHeight, rightHeight) / this.imageResizeRatio;\n      // create dest coordinates matrix\n      const destCoordinates = [\n        [0, 0],\n        [maxWidth - 1, 0],\n        [maxWidth - 1, maxHeight - 1],\n        [0, maxHeight - 1]\n      ];\n\n      // convert to open cv matrix objects\n      const Ms = cv.matFromArray(4, 1, cv.CV_32FC2, [].concat(...sourceCoordinates));\n      const Md = cv.matFromArray(4, 1, cv.CV_32FC2, [].concat(...destCoordinates));\n      const transformMatrix = cv.getPerspectiveTransform(Ms, Md);\n      // set new image size\n      const dsize = new cv.Size(maxWidth, maxHeight);\n      // perform warp\n      cv.warpPerspective(src, dst, transformMatrix, dsize, cv.INTER_LINEAR, cv.BORDER_CONSTANT, new cv.Scalar());\n      cv.imshow(this.editedImage, dst);\n\n      src.delete(); dst.delete(); Ms.delete(); Md.delete(); transformMatrix.delete();\n\n      this.setPreviewPaneDimensions(this.editedImage);\n      this.showPreview().then(() => {\n        this.processing.emit(false);\n        resolve();\n      });\n    });\n  }\n\n  /**\n   * applies the selected filter to the image\n   * @param preview - when true, will not apply the filter to the edited image but only display a preview.\n   * when false, will apply to editedImage\n   */\n  private applyFilter(preview: boolean): Promise<void> {\n    return new Promise(async (resolve, reject) => {\n      this.processing.emit(true);\n      // default options\n      const options = {\n        blur: false,\n        th: true,\n        thMode: cv.ADAPTIVE_THRESH_MEAN_C,\n        thMeanCorrection: 10,\n        thBlockSize: 25,\n        thMax: 255,\n        grayScale: true,\n      };\n      const dst = cv.imread(this.editedImage);\n\n      switch (this.selectedFilter) {\n        case 'original':\n          options.th = false;\n          options.grayScale = false;\n          options.blur = false;\n          break;\n        case 'magic_color':\n          options.grayScale = false;\n          break;\n        case 'bw2':\n          options.thMode = cv.ADAPTIVE_THRESH_GAUSSIAN_C;\n          options.thMeanCorrection = 15;\n          options.thBlockSize = 15;\n          break;\n        case 'bw3':\n          options.blur = true;\n          options.thMeanCorrection = 15;\n          break;\n      }\n      if (options.grayScale) {\n        cv.cvtColor(dst, dst, cv.COLOR_RGBA2GRAY, 0);\n      }\n      if (options.blur) {\n        const ksize = new cv.Size(5, 5);\n        cv.GaussianBlur(dst, dst, ksize, 0, 0, cv.BORDER_DEFAULT);\n      }\n      if (options.th) {\n        if (options.grayScale) {\n          cv.adaptiveThreshold(dst, dst, options.thMax, options.thMode, cv.THRESH_BINARY, options.thBlockSize, options.thMeanCorrection);\n        } else {\n          dst.convertTo(dst, -1, 1, 60);\n          cv.threshold(dst, dst, 170, 255, cv.THRESH_BINARY);\n        }\n      }\n      if (!preview) {\n\n        cv.imshow(this.editedImage, dst);\n      }\n      await this.showPreview(dst);\n      this.processing.emit(false);\n      resolve();\n    });\n  }\n\n  /**\n   * resize an image to fit constraints set in options.maxImageDimensions\n   */\n  private resize(image?: any): Promise<HTMLCanvasElement> {\n    return new Promise((resolve, reject) => {\n      this.processing.emit(true);\n      const src = cv.imread(this.editedImage);\n      const currentDimensions = {\n        width: src.size().width,\n        height: src.size().height\n      };\n      const resizeDimensions = {\n        width: 0,\n        height: 0\n      };\n      if (currentDimensions.width > this.options.maxImageDimensions.width) {\n        resizeDimensions.width = this.options.maxImageDimensions.width;\n        resizeDimensions.height = this.options.maxImageDimensions.width / currentDimensions.width * currentDimensions.height;\n        if (resizeDimensions.height > this.options.maxImageDimensions.height) {\n          resizeDimensions.height = this.options.maxImageDimensions.height;\n          resizeDimensions.width = this.options.maxImageDimensions.height / currentDimensions.height * currentDimensions.width;\n        }\n        const dsize = new cv.Size(Math.floor(resizeDimensions.width), Math.floor(resizeDimensions.height));\n        cv.resize(src, src, dsize, 0, 0, cv.INTER_AREA);\n        const resizeResult = <HTMLCanvasElement> document.createElement('canvas');\n        cv.imshow(resizeResult, src);\n        src.delete();\n        this.processing.emit(false);\n        resolve(resizeResult);\n      } else {\n        if (image) {\n          resolve(image);\n        } else {\n          resolve(this.editedImage);\n        }\n      }\n    });\n  }\n\n  /**\n   * display a preview of the image on the preview canvas\n   */\n  private showPreview(image?: any) {\n    return new Promise((resolve, reject) => {\n      let src;\n      if (image) {\n        src = image;\n      } else {\n        src = cv.imread(this.editedImage);\n      }\n      const dst = new cv.Mat();\n      const dsize = new cv.Size(0, 0);\n      cv.resize(src, dst, dsize, this.imageResizeRatio, this.imageResizeRatio, cv.INTER_AREA);\n      cv.imshow(this.previewCanvas.nativeElement, dst);\n      src.delete();\n      dst.delete();\n      resolve();\n    });\n  }\n\n  // *************** //\n  // Utility Methods //\n  // *************** //\n  /**\n   * set preview canvas dimensions according to the canvas element of the original image\n   */\n  private setPreviewPaneDimensions(img: HTMLCanvasElement) {\n    // set preview pane dimensions\n    this.previewDimensions = this.calculateDimensions(img.width, img.height);\n    this.previewCanvas.nativeElement.width = this.previewDimensions.width;\n    this.previewCanvas.nativeElement.height = this.previewDimensions.height;\n    this.imageResizeRatio = this.previewDimensions.width / img.width;\n    this.imageDivStyle = {\n      width: this.previewDimensions.width + this.options.cropToolDimensions.width + 'px',\n      height: this.previewDimensions.height + this.options.cropToolDimensions.height + 'px',\n      'margin-left': `calc((100% - ${this.previewDimensions.width + 10}px) / 2 + ${this.options.cropToolDimensions.width / 2}px)`,\n      'margin-right': `calc((100% - ${this.previewDimensions.width + 10}px) / 2 - ${this.options.cropToolDimensions.width / 2}px)`,\n    };\n    this.limitsService.setPaneDimensions({width: this.previewDimensions.width, height: this.previewDimensions.height});\n  }\n\n  /**\n   * calculate dimensions of the preview canvas\n   */\n  private calculateDimensions(width: number, height: number): { width: number; height: number; ratio: number} {\n    const ratio = width / height;\n\n    const maxWidth = this.screenDimensions.width > this.maxPreviewWidth ?\n      this.maxPreviewWidth : this.screenDimensions.width - 20;\n    const maxHeight = this.screenDimensions.height - 200;\n    const calculated = {\n      width: maxWidth,\n      height: Math.round(maxWidth / ratio),\n      ratio: ratio\n    };\n\n    if (calculated.height > maxHeight) {\n      calculated.height = maxHeight;\n      calculated.width = Math.round(maxHeight * ratio);\n    }\n    return calculated;\n  }\n\n  /**\n   * returns a point by it's roles\n   * @param roles - an array of roles by which the point will be fetched\n   */\n  private getPoint(roles: RolesArray) {\n    return this.points.find(point => {\n      return this.limitsService.compareArray(point.roles, roles);\n    });\n  }\n}\n\n/**\n * a class for generating configuration objects for the editor\n */\nclass ImageEditorConfig implements DocScannerConfig {\n  /**\n   * max dimensions of oputput image. if set to zero\n   */\n  maxImageDimensions: ImageDimensions = {\n    width: 800,\n    height: 1200\n  };\n  /**\n   * background color of the main editor div\n   */\n  editorBackgroundColor = 'dimgrey';\n  /**\n   * css properties for the main editor div\n   */\n  editorDimensions: { width: string; height: string; } = {\n    width: '100vw',\n    height: '100vh'\n  };\n  /**\n   * css that will be added to the main div of the editor component\n   */\n  extraCss: {[key: string]: string|number} = {\n    position: 'absolute',\n    top: 0,\n    left: 0\n  };\n\n  /**\n   * material design theme color name\n   */\n  buttonThemeColor: 'primary'|'warn'|'accent' = 'accent';\n  /**\n   * icon for the button that completes the editing and emits the edited image\n   */\n  exportImageIcon = 'cloud_upload';\n  /**\n   * color of the crop tool\n   */\n  cropToolColor = '#3cabe2';\n  /**\n   * shape of the crop tool, can be either a rectangle or a circle\n   */\n  cropToolShape: PointShape = 'rect';\n  /**\n   * dimensions of the crop tool\n   */\n  cropToolDimensions: ImageDimensions = {\n    width: 10,\n    height: 10\n  };\n  /**\n   * aggregation of the properties regarding point attributes generated by the class constructor\n   */\n  pointOptions: PointOptions;\n  /**\n   * aggregation of the properties regarding the editor style generated by the class constructor\n   */\n  editorStyle?: {[key: string]: string|number};\n  /**\n   * crop tool outline width\n   */\n  cropToolLineWeight = 3;\n  /**\n   * maximum size of the preview pane\n   */\n  maxPreviewWidth = 800;\n\n  constructor(options: DocScannerConfig) {\n    if (options) {\n      Object.keys(options).forEach(key => {\n        this[key] = options[key];\n      });\n    }\n\n    this.editorStyle = {'background-color': this.editorBackgroundColor };\n    Object.assign(this.editorStyle, this.editorDimensions);\n    Object.assign(this.editorStyle, this.extraCss);\n\n    this.pointOptions = {\n      shape: this.cropToolShape,\n      color: this.cropToolColor,\n      width: 0,\n      height: 0\n    };\n    Object.assign(this.pointOptions, this.cropToolDimensions);\n  }\n}\n\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {NgxOpenCvService, OpenCvConfigToken} from './services/ngx-open-cv.service';\nimport {NgxDraggablePointComponent} from './components/draggable-point/ngx-draggable-point.component';\nimport {NgxFilterMenuComponent} from './components/filter-menu/ngx-filter-menu.component';\nimport {NgxShapeOutlineComponent} from './components/shape-outline/ngx-shape-outline.component';\nimport {NgxDocScannerComponent} from './components/image-editor/ngx-doc-scanner.component';\nimport {LimitsService} from './services/limits.service';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatBottomSheetModule, MatButtonModule, MatIconModule, MatListModule} from '@angular/material';\nimport {AngularDraggableModule} from 'angular2-draggable';\nimport {CommonModule} from '@angular/common';\nimport {OpenCvConfig} from './PublicModels';\n\n@NgModule({\n  declarations: [\n    NgxDraggablePointComponent,\n    NgxFilterMenuComponent,\n    NgxShapeOutlineComponent,\n    NgxDocScannerComponent,\n  ],\n  imports: [\n    FlexLayoutModule,\n    MatButtonModule,\n    MatIconModule,\n    MatBottomSheetModule,\n    MatListModule,\n    AngularDraggableModule,\n    CommonModule,\n  ],\n  exports: [\n    NgxDocScannerComponent,\n  ],\n  entryComponents: [\n    NgxFilterMenuComponent,\n  ],\n  providers: [\n    NgxOpenCvService,\n    LimitsService,\n  ]\n})\nexport class NgxDocumentScannerModule {\n  static forRoot(config: OpenCvConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxDocumentScannerModule,\n      providers: [{ provide: OpenCvConfigToken, useValue: config }]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
